---

- name: Install tar & gzip
  apt:
    name: "{{ item }}"
    state: present
  with_items:
    - tar
    - gzip
    - unzip

- name: Create app directory
  shell: |
    mkdir -p /home/ubuntu/app

- name: Copy app artifact
  copy:
    src: ~/project/artifact.tar.gz
    dest: /home/ubuntu/app.tar.gz

- name: Copy inventory
  copy:
    src: ~/project/.circleci/ansible/inventory.txt
    dest: /home/ubuntu/inventory.txt

- name: Extract backend build (include copy)
  unarchive:
    src: ~/project/artifact.tar.gz
    dest: /home/ubuntu/app

- name: Check env
  shell: |
    echo $TYPEORM_PORT
    echo $TYPEORM_USERNAME
    
# - name: Start backend
#   shell: |
#     cd /home/ubuntu/app
#     /usr/bin/pm2 start /home/ubuntu/app/dist/main.js --name backend -f
#   environment:
#     ENVIRONMENT: production
#     NODE_ENV: production
#     TYPEORM_CONNECTION: postgres
#     TYPEORM_MIGRATIONS_DIR: ~/src/migrations
#     TYPEORM_MIGRATIONS: ~/src/migrations/*.ts
#     TYPEORM_ENTITIES: ~/src/modules/domain/**/*.entity.ts
#     TYPEORM_HOST: db-section-4.co0bsguz8zuv.us-east-1.rds.amazonaws.com
#     TYPEORM_PORT: 5432
#     TYPEORM_USERNAME: postgres
#     TYPEORM_PASSWORD: huuthang2509
#     TYPEORM_DATABASE: initialdb
    
- name: Start application
  shell: |
    cd /home/ubuntu/app
    npm install
    pm2 stop default
    pm2 start npm -- start

- name: Try ping
  shell: |
    export BACKEND_IP=$(tail -1 /home/ubuntu/inventory.txt)
    echo ${BACKEND_IP}
    export API_URL="http://${BACKEND_IP}:3030"
    echo "${API_URL}"
    if curl "${API_URL}/api/status" | grep "ok"
    then
        return 0
    else
        return 1
    fi